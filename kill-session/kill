#More often than weâ€™d like, we find ourselves resorting to three SQL commands to cancel
#running queries and terminate connections. Here is a typical sequence to follow:

#1. Retrieve a listing of recent connections and process IDs:

SELECT * FROM pg_stat_activity;

# Si se desea lista SOLO las conexiones activas,

SELECT 
    pid
    ,datname
    ,usename
    ,application_name
    ,client_hostname
    ,client_port
    ,backend_start
    ,query_start
    ,query
    ,state
FROM pg_stat_activity
WHERE state = 'active'

#Additionally, the command provides details of the last query running on each connection,
#the connected user (usename), the database (datname) in use, and the start
#times of the query. You need this view to grab the process IDs of connections that
#you want to terminate.

# 2. Now cancel all active queries on a connection:

SELECT pg_cancel_backend(procid)

#This does not terminate the connection itself, though.

#3. Kill the connection:

SELECT pg_terminate_backend(procid)

#If you have not canceled the queries on the connection, they are all rudely terminated
#now. This will be your weapon of choice prior to a restore to prevent an eager
#user from immediately restarting a canceled query.
